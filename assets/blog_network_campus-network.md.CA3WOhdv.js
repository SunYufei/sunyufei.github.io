import{_ as a,c as p,o as s,a3 as n}from"./chunks/framework.Dx4m7yM6.js";const b=JSON.parse('{"title":"我用校园网干了件羞羞的事情","description":"","frontmatter":{"lastUpdated":"2018-11-05T00:00:00.000Z"},"headers":[],"relativePath":"blog/network/campus-network.md","filePath":"blog/network/campus-network.md","lastUpdated":1714482263000}'),t={name:"blog/network/campus-network.md"},e=n(`<h1 id="我用校园网干了件羞羞的事情" tabindex="-1">我用校园网干了件羞羞的事情 <a class="header-anchor" href="#我用校园网干了件羞羞的事情" aria-label="Permalink to &quot;我用校园网干了件羞羞的事情&quot;">​</a></h1><blockquote><p>这一切，从分到实验室工位开始……</p></blockquote><h2 id="part-1" tabindex="-1">Part 1 <a class="header-anchor" href="#part-1" aria-label="Permalink to &quot;Part 1&quot;">​</a></h2><p>先讲点分到实验室工位之前的事情。今年招生招多了，导致实验室分配紧张，刚来的前两周没有分到实验室，在宿舍里学习。</p><p>看到舍友们每天早早去实验室学习，再看看躺在床上的自己，别提有多高兴了。（啊哈哈哈哈）</p><p>渐渐的，出现了一点小问题。我自己在宿舍的时候喜欢开门通风，好处就不说了，有一点很难受，蚊子有点多。</p><p>第二周周五，分到实验室了。高高兴兴地从宿舍出发，来到实验室一看，没有电脑。</p><h2 id="part-2" tabindex="-1">Part 2 <a class="header-anchor" href="#part-2" aria-label="Permalink to &quot;Part 2&quot;">​</a></h2><p>一开始，我天天背着笔记本去实验室学习，第三周开始上课后发现背笔记本不太方便。我发现，实验室的角落里，堆着一些报废的机器。</p><p><strong>「学校不会知道我了解一点修电脑的技术吧」</strong></p><p>我去那个角落里瞅了一下，有一些显示器，两台比较完整的主机。我把两台主机接上线用了一下，配置差的那台能用，配置好的那台坏了。为了用上一台相对好点的电脑，我想出了一个<strong>拼多多计划</strong>——两台拼成一台凑合用，等学校配新机器。就这样，解决了电脑的问题。</p><p>当然，这都不是重点，重点在于：</p><p><strong>「我发了一条 拼多多计划 的朋友圈，导师给我点了赞」</strong></p><p>感谢导师对我的认可。</p><h2 id="part-3" tabindex="-1">Part 3 <a class="header-anchor" href="#part-3" aria-label="Permalink to &quot;Part 3&quot;">​</a></h2><p>拼多多计划后，手边剩下一条坏掉的内存和两个空硬盘。旧的那个硬盘让我用来装 Linux 组双系统了，新的那个硬盘闲置下来。</p><p><strong>「必须给它安排起来」</strong></p><p>我一开始使用 U 盘在实验室和笔记本之间拷文件，这样不太方便。有了这个硬盘，可以做一个 NAS，用于实验室和宿舍之间的文件共享。</p><p>经过测试，在登上校园网账号建立连接的情况下从宿舍里能 ping 通实验室，反着 ping 不通，传输数据不消耗校园网流量。最初的方案诞生了。</p><p>电脑从直连校园网改为通过路由器连接校园网，文件服务器通过相同的路由器接入校园网。这样需要一台用作路由的机器。</p><p>为了实现路由与文件服务器的功能，我搞到一台瘦客户机。这台机器除了硬盘其他的硬件都有，可以装全功能系统。一开始我安装了 Ubuntu Server 系统，安装完成后发现不知道怎么登录校园网。后来发现这台机器运行全功能系统发热很大，上网搜了一下，看到了专用于路由的系统：<a href="https://openwrt.org/" target="_blank" rel="noreferrer">OpenWRT</a>，OpenWRT 是一个 Linux 系统的发行版，精简了很多的 Linux 组件，很适合安装在这台机器上。</p><h2 id="part-4" tabindex="-1">Part 4 <a class="header-anchor" href="#part-4" aria-label="Permalink to &quot;Part 4&quot;">​</a></h2><p>就这样，我走上了一条踩坑之路……</p><p>安装 OpenWRT 很简单，去官网下好 x86 版本的 img 镜像，去 Linux 下使用 dd 命令写入硬盘即可。</p><p>理论上，安装完成后就可以使用了。没错，「理论上」。</p><p><strong>第一个坑来了，「没有 USB 网卡驱动」</strong></p><p>在我决定用 OpenWRT 后就给机器配了一个 360 随身 WiFi，OpenWRT 中不带 USB 网卡驱动，需要自己安装。</p><p>上网一搜，360 WiFi 的硬件为 MT7601，需要在 OpenWRT 中安装 kmod-mt7601u 驱动。下载，使用 SCP 传入机器，安装。</p><p><strong>第二个坑，「没有安装依赖包」</strong></p><p>在搜索依赖包的时候发现 OpenWRT 扩展包的依赖有点乱，多乱呢？Emmm…心态差点炸掉，列一下安装顺序。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>iw</span></span>
<span class="line"><span>wireless-regdb</span></span>
<span class="line"><span>kmod-cfg80211</span></span>
<span class="line"><span>hostapd-common</span></span>
<span class="line"><span>kmod-mac80211</span></span>
<span class="line"><span>kmod-nls-base</span></span>
<span class="line"><span>kmod-usb-core</span></span>
<span class="line"><span>mt7601u-fireware</span></span>
<span class="line"><span>kmod-mt7601u</span></span>
<span class="line"><span>kmod-usb-ehci</span></span>
<span class="line"><span>kmod-usb2</span></span></code></pre></div><p>这么看起来需要安装的包不太多，但搜索起来真的麻烦。到这里 USB 网卡已经可以使用了。扫描 WiFi 输入密码建立连接，怎么也连不上。</p><p>一开始以为是输入错误，在输了几遍之后又怀疑密码给错了，确认密码无误后陷入了沉思，“网卡不会坏了吧”。</p><p>拔掉网卡，插到电脑上，能用。</p><p>“系统出问题了？”</p><p>又重复了上面的操作，还是连不上 WiFi。</p><p>百度了一下，搜不到解决方法。Google 了一下，找到解决方法了。不得不说，Google 是个好东西。</p><p><strong>第三个坑，「OpenWRT 原生不支持 WPA2-PSK 加密」</strong></p><p>解决起来很简单，再装几个包</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>libnl-tiny</span></span>
<span class="line"><span>wpa-supplicant</span></span></code></pre></div><p>到这里，系统可以联网正常运行了。装好 Web 控制页面 Luci 就可以使用了。</p><p><strong>「然而坑并没有踩完」</strong></p><h2 id="part-5" tabindex="-1">Part 5 <a class="header-anchor" href="#part-5" aria-label="Permalink to &quot;Part 5&quot;">​</a></h2><p>此时的我已经准备配置 Samba 共享了。装好 Samba 服务，配置分享目录和用户权限。分享目录可以通过 Web 管理页面进行，用户权限需要新建用户，然后用 smbpasswd 给用户设置密码。电脑连上传了一个文件，传着传着，出问题了。</p><p><strong>第四个坑，「OpenWRT 镜像没用使用整个硬盘」</strong></p><p>OpenWRT 只使用了 256M 的硬盘，剩下的 400+G 是空白的，解决这个问题很简单，给剩下的空间新建一个分区，挂载到系统中即可。重启后需要重新挂载，在启动项里加一条命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sda3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /share</span></span></code></pre></div><p>问题解决。</p><p>至此，连踩四个坑，炸。</p><p><strong>「然而坑还没有踩完」</strong></p><h2 id="part-6" tabindex="-1">Part 6 <a class="header-anchor" href="#part-6" aria-label="Permalink to &quot;Part 6&quot;">​</a></h2><p>路由的配置方面相对简单一些，USB 网卡当 WAN，以太网接口当 LAN，电脑与路由之间用二层交换机连接，测试一下，正常运行。我在服务器上放了俩视频，回宿舍测试一下。</p><p>回到宿舍，连上服务器，打开一个视频……</p><p><strong>第五个坑，「校园网限制内网传输速度」</strong></p><p>校园网限制内网传输速度，限制到 10Mbps 以内，大部分时间网速在 5Mbps 左右，看视频都没法快进快退。如果说刚才四个坑凑成一个炸，这个坑比 4 个 2 还厉害，这就是一个王炸。网络中心这么做可以理解，要是所有人像我这么做，校园网就真的王炸了。</p><p><strong>「学习重要，看什么视频」</strong></p><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>至此，从实验室到宿舍的文件共享系统搭建完毕，可以正常使用。校园网限速的问题很棘手，需要一个好的方法去解决。先凑合用吧，想到好的方法再改。</p><p>这台机器的功耗很低，性能比一般的路由器强很多，可扩展性非常好。这次的实操对以后家庭网络的设计和搭建有一定的帮助。</p>`,59),o=[e];function r(i,l,c,d,h,u){return s(),p("div",null,o)}const m=a(t,[["render",r]]);export{b as __pageData,m as default};
