import{_ as s,c as a,o as i,a3 as n}from"./chunks/framework.aylqcoc3.js";const u=JSON.parse('{"title":"VSCode 开发环境配置","description":"","frontmatter":{"lastUpdated":"2020-07-26T00:00:00.000Z"},"headers":[],"relativePath":"blog/vscode.md","filePath":"blog/vscode.md","lastUpdated":1714482263000}'),e={name:"blog/vscode.md"},t=n(`<h1 id="vscode-开发环境配置" tabindex="-1">VSCode 开发环境配置 <a class="header-anchor" href="#vscode-开发环境配置" aria-label="Permalink to &quot;VSCode 开发环境配置&quot;">​</a></h1><p>VSCode + C + Java + Go，备战秋招</p><h1 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h1><h2 id="插件、设置同步" tabindex="-1">插件、设置同步 <a class="header-anchor" href="#插件、设置同步" aria-label="Permalink to &quot;插件、设置同步&quot;">​</a></h2><p>安装插件 <code>code-setting-sync</code>，根据提示配置 GitHub Gists，到设置中打开自动上传和下载</p><h2 id="色彩、图标" tabindex="-1">色彩、图标 <a class="header-anchor" href="#色彩、图标" aria-label="Permalink to &quot;色彩、图标&quot;">​</a></h2><p>不太喜欢默认的黑色主题，换成了 <code>Solarized Light</code></p><p>图标使用了插件 <code>vscode-icons</code></p><h1 id="开发环境配置" tabindex="-1">开发环境配置 <a class="header-anchor" href="#开发环境配置" aria-label="Permalink to &quot;开发环境配置&quot;">​</a></h1><h2 id="markdown" tabindex="-1">Markdown <a class="header-anchor" href="#markdown" aria-label="Permalink to &quot;Markdown&quot;">​</a></h2><p>本博客使用 Markdown 编写，Coding DevOps / GitHub Actions 自动部署。安装 <code>Markdown All in One</code> 插件增强 VSCode 的 Markdown 功能</p><p>或者使用 Typora 编写 Markdown</p><h2 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h2><p>到 <a href="https://github.com/git-for-windows/git/releases" target="_blank" rel="noreferrer">git-for-windows</a> 项目中下载最新的 git-for-windows，安装完毕后将安装目录的 <code>cmd</code> 文件夹加入环境变量</p><p>（可选）VSCode 中安装 <code>GitLens</code> 插件</p><h2 id="c-c" tabindex="-1">C/C++ <a class="header-anchor" href="#c-c" aria-label="Permalink to &quot;C/C++&quot;">​</a></h2><p>安装 MinGW-w64 并将 <code>bin</code> 目录添加到环境变量中</p><p>安装 <code>C/C++</code> 插件后进入设置，修改如下内容</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   &quot;C_Cpp.default.compilerPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/mingw64/bin/gcc.exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   &quot;C_Cpp.default.cppStandard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c++17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   &quot;C_Cpp.default.cStandard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c11&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   &quot;C_Cpp.default.intelliSenseMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gcc-x64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   &quot;C_Cpp.clang_format_style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   &quot;C_Cpp.clang_format_sortIncludes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="go" tabindex="-1">Go <a class="header-anchor" href="#go" aria-label="Permalink to &quot;Go&quot;">​</a></h2><p>下载安装 Go，开启 Go Module，配置 GOPROXY</p><p>在 VSCode 中安装 Go 插件即可</p><h2 id="java" tabindex="-1">Java <a class="header-anchor" href="#java" aria-label="Permalink to &quot;Java&quot;">​</a></h2><p>下载安装 OpenJDK，安装完毕后配置 <code>JAVA_HOME</code> 和 <code>Path</code> 环境变量</p><p>如果只做算法题，安装插件 <code>Language Support for Java(TM) by Red Hat</code> 即可。工程开发推荐 IntelliJ IDEA</p><h2 id="python" tabindex="-1">Python <a class="header-anchor" href="#python" aria-label="Permalink to &quot;Python&quot;">​</a></h2><h3 id="安装-miniconda-3" tabindex="-1">安装 Miniconda 3 <a class="header-anchor" href="#安装-miniconda-3" aria-label="Permalink to &quot;安装 Miniconda 3&quot;">​</a></h3><p>由于用不上 Anaconda 的所有包，故选用轻量级的 Miniconda 替代</p><p>Miniconda 的安装包可以到 <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/" target="_blank" rel="noreferrer">https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/</a> 下载</p><p>下载完成后双击运行安装即可，假设安装目录为 <code>D:\\Develop\\Miniconda</code></p><h3 id="配置环境变量" tabindex="-1">配置环境变量 <a class="header-anchor" href="#配置环境变量" aria-label="Permalink to &quot;配置环境变量&quot;">​</a></h3><p>将下面的三个目录添加到环境变量 <code>Path</code> 中</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>D:\\Develop\\Miniconda3</span></span>
<span class="line"><span>D:\\Develop\\Miniconda3\\Library\\bin</span></span>
<span class="line"><span>D:\\Develop\\Miniconda3\\Scripts</span></span></code></pre></div><h3 id="配置清华镜像" tabindex="-1">配置清华镜像 <a class="header-anchor" href="#配置清华镜像" aria-label="Permalink to &quot;配置清华镜像&quot;">​</a></h3><p>在安装其他的软件包之前，可以配置清华镜像加快下载速度</p><p>具体操作参考 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noreferrer">Anaconda 镜像使用帮助</a></p><h3 id="python-3-8" tabindex="-1">Python 3.8 <a class="header-anchor" href="#python-3-8" aria-label="Permalink to &quot;Python 3.8&quot;">​</a></h3><p>据说有改进和蜜汁加成，试用一下</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.8</span></span></code></pre></div><h3 id="机器学习-计算机视觉" tabindex="-1">机器学习 &amp; 计算机视觉 <a class="header-anchor" href="#机器学习-计算机视觉" aria-label="Permalink to &quot;机器学习 &amp; 计算机视觉&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dlib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> opencv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scikit-learn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scikit-image</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seaborn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytorch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytorch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torchvision</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cudatoolkit=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cudnn</span></span></code></pre></div><p>只需要装这几个包就可以涵盖常用的机器学习和计算机视觉库</p><ul><li>cuda + cudnn</li><li>numpy</li><li>opencv</li><li>pandas</li><li>pillow</li><li>pytorch + torchvision</li><li>scikit-learn + scikit-image</li><li>scipy</li><li>matplotlib + seaborn</li></ul><blockquote><p>注：TensorFlow 不支持 Python 3.8，如需安装可使用 conda 新建一个 Python 3.7 的环境</p></blockquote><h3 id="jupyter-notebook" tabindex="-1">Jupyter Notebook <a class="header-anchor" href="#jupyter-notebook" aria-label="Permalink to &quot;Jupyter Notebook&quot;">​</a></h3><p>VSCode Python 插件支持 Jupyter Notebook，无需在 <code>conda</code> 中安装全部的 <code>jupyter</code> 只需安装 <code>notebook</code></p><p>有一点需要注意的是在配置好上面的环境后使用 <code>conda</code> 安装 <code>notebook</code> 会出现依赖问题，这里使用 <code>pip</code> 安装</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> notebook</span></span></code></pre></div><h3 id="vscode-配置" tabindex="-1">VSCode 配置 <a class="header-anchor" href="#vscode-配置" aria-label="Permalink to &quot;VSCode 配置&quot;">​</a></h3><p>首先需要在 VSCode 中安装 <code>Python</code> 插件然后配置类型检查、格式化代码和引用排序</p><p>这里使用 <code>flake8 + yapf + isort</code> 组合</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flake8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yapf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isort</span></span></code></pre></div><p>最后在 VSCode 设置中启用这些工具</p><h2 id="远程开发" tabindex="-1">远程开发 <a class="header-anchor" href="#远程开发" aria-label="Permalink to &quot;远程开发&quot;">​</a></h2><p>平时用服务器跑机器学习，使用 VSCode 远程开发需要安装<code>Remote Development</code>插件，安装完成后配置免密登录</p><h3 id="生成密钥对" tabindex="-1">生成密钥对 <a class="header-anchor" href="#生成密钥对" aria-label="Permalink to &quot;生成密钥对&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span></span></code></pre></div><p>生成完毕后会在<code>C:\\Users\\USERNAME\\.ssh</code>文件夹下多出两个文件：<code>id_rsa</code>和<code>id_rsa.pub</code></p><h3 id="传递公钥" tabindex="-1">传递公钥 <a class="header-anchor" href="#传递公钥" aria-label="Permalink to &quot;传递公钥&quot;">​</a></h3><p>将 <code>id_rsa.pub</code> 文件传到远程服务器的某个目录下，这里以 <code>/home/sun</code> 为例，执行下面的命令将公钥追加到 <code>authorized_keys</code> 文件中</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/id_rsa.pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/authorized_keys</span></span></code></pre></div><p>完成免密登录配置</p><h1 id="leetcode" tabindex="-1">LeetCode <a class="header-anchor" href="#leetcode" aria-label="Permalink to &quot;LeetCode&quot;">​</a></h1><p>VSCode LeetCode 插件依赖 Node.js 8+，需要预先安装好 Node.js</p><p>在 VSCode 中安装 LeetCode 插件，安装完毕后设置默认编程语言和题目保存路径，在 <code>settings.json</code> 中添加如下内容：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 默认语言</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;leetcode.defaultLanguage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;java&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件保存目录</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;leetcode.workspaceFolder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/Documents/Projects/OI/LeetCode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件相对路径</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;leetcode.filePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;default&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;folder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;filename&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${id}-\${tag}-\${kebab-case-name}.\${ext}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;folder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;golang&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;folder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Go&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;java&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;folder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Java&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;python3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;folder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Python&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>左侧点击 LeetCode 图标，登录 LeetCode 账号就可以开始做题了</p>`,67),l=[t];function h(p,o,d,k,r,c){return i(),a("div",null,l)}const F=s(e,[["render",h]]);export{u as __pageData,F as default};
