import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.Dx4m7yM6.js";const g=JSON.parse('{"title":"文化崂山抢票记","description":"","frontmatter":{"lastUpdated":"2020-01-29T00:00:00.000Z"},"headers":[],"relativePath":"blog/film-ticket.md","filePath":"blog/film-ticket.md","lastUpdated":1714482263000}'),t={name:"blog/film-ticket.md"},l=n(`<h1 id="文化崂山抢票记" tabindex="-1">文化崂山抢票记 <a class="header-anchor" href="#文化崂山抢票记" aria-label="Permalink to &quot;文化崂山抢票记&quot;">​</a></h1><p>年前实现了基于 GitHub Actions 的全自动抢票，由于众所周知的原因，文化崂山低价观影一时半会用不上了，它敢放票咱不敢去呀，一去岂不是要瞬间爆炸</p><p>最近在家里闲着没啥事，不想看论文，就寻思着写点东西，分享一下开发过程</p><p>本文主要包含如下内容：</p><ol><li>抢票原理及实现</li><li>GitHub Actions 部署</li><li>怎样部署自己的抢票工具</li></ol><h2 id="抢票原理及实现" tabindex="-1">抢票原理及实现 <a class="header-anchor" href="#抢票原理及实现" aria-label="Permalink to &quot;抢票原理及实现&quot;">​</a></h2><p>首先来讲一下抢票原理。用程序模拟人访问文化崂山网站，进行登录、抢票等操作，主要用到 requests 库。</p><p>整个代码的核心是一个 Session 对象，用于保持登录状态。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">session </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.Session()</span></span></code></pre></div><p>主要包含 5 大模块：</p><ol><li>余票查询</li><li>登录</li><li>订单查询</li><li>订票</li><li>删票</li></ol><h3 id="登录" tabindex="-1">登录 <a class="header-anchor" href="#登录" aria-label="Permalink to &quot;登录&quot;">​</a></h3><p>登录模块最简单，只需要将用户名和密码 POST 到指定网址即可。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;IdNumber&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;username&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;PassWord&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;password&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session.post(login_url, data)</span></span></code></pre></div><p>服务端返回登录信息，<code>登录成功</code>、<code>用户名或密码错误</code>等</p><h3 id="余票查询" tabindex="-1">余票查询 <a class="header-anchor" href="#余票查询" aria-label="Permalink to &quot;余票查询&quot;">​</a></h3><p>这里需要分析网站首页的活动信息，剔除无用信息，保留有需要的部分：<code>(活动时间, 截止时间, 活动链接)</code>。由于活动数量较多，一页可能显示不完，就需要对后面的几页进行分析。</p><p>文化崂山在元旦时上线了新版后台，相比于旧版基于 Asp.NET 的后台，分析后面的页面更简单了，只需要在网址上做做手脚。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/pages/&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page_num</span></span></code></pre></div><p>发送 GET 请求就可以得到网页内容，然后用网页解析工具解析网页即可得到余票情况。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.get(url)</span></span></code></pre></div><h3 id="订单查询" tabindex="-1">订单查询 <a class="header-anchor" href="#订单查询" aria-label="Permalink to &quot;订单查询&quot;">​</a></h3><p>订单查询与余票查询有相似的地方，都需要分析页面信息，分析的方法也类似。与获取余票信息不同的是，需要先进行登录操作，得到用户的 Cookies 后再进行订单查询。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> order_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/page/&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page_num</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session.get(url)</span></span></code></pre></div><h3 id="订票" tabindex="-1">订票 <a class="header-anchor" href="#订票" aria-label="Permalink to &quot;订票&quot;">​</a></h3><p>订票操作与登录操作类似，需要将特定的数据 POST 到指定网址。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;activityid&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;activityname&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;idnumber&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;realname&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;type2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;current_url&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: url</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session.post(purchase_url, data)</span></span></code></pre></div><p>服务端返回订票情况，如 <code>抢票成功，请携带xxx到xxx</code>、<code>您已用光今年的6次抢票机会</code> 等。</p><h3 id="删票" tabindex="-1">删票 <a class="header-anchor" href="#删票" aria-label="Permalink to &quot;删票&quot;">​</a></h3><p>如果不及时删票可能会影响到以后的抢票活动（官方这样说的，不晓得具体是不是这样）。删票时需要提前获得已定的票的 id，然后将这个 id POST 到指定网址即可。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;QzId&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: tid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session.post(url, data)</span></span></code></pre></div><p>服务端返回一个数字，表示删票成功与否。</p><h2 id="github-actions-部署" tabindex="-1">GitHub Actions 部署 <a class="header-anchor" href="#github-actions-部署" aria-label="Permalink to &quot;GitHub Actions 部署&quot;">​</a></h2><p>GitHub Actions 是 DevOps 的一种体现形式。B 站看到利用 GitHub Actions 实现博客网站的自动编译部署。GitHub 会在每次提交代码后自动将博客源文件编译成静态网站部署到 GitHub Pages 中。</p><p>看了一下 GitHub Actions 的官方文档后，我准备做两个事情：</p><ol><li>搭建全自动部署的博客（搭建中，GitHub 和 Coding 双备份）</li><li>文化崂山全自动抢票（已实现）</li></ol><p>启用 Actions 很简单，只需要在仓库目录下新建 <code>.github/workflows</code> 目录，然后在里面添加 yaml 文件，按照 GitHub 文档给定的格式填写内容，例如：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Actions name</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">autorun</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在提交代码时运行 actions</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   autorun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># job id</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">autorun</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行环境</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # pull 仓库代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">install requirements</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pip3 install -r requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">run code</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # 使用 secrets 保存用户名密码，此处调用</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">           run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">python3 run.py -u \${{ secrets.USERNAME }} -p \${{ secrets.PASSWORD }}</span></span></code></pre></div><h2 id="怎样部署自己的抢票工具" tabindex="-1">怎样部署自己的抢票工具 <a class="header-anchor" href="#怎样部署自己的抢票工具" aria-label="Permalink to &quot;怎样部署自己的抢票工具&quot;">​</a></h2><blockquote><p>影院开放后补充</p></blockquote><ol><li>fork 这个仓库</li><li>修改 cron.yml</li><li>添加 Secrets</li></ol>`,41),h=[l];function p(e,k,E,d,r,o){return a(),i("div",null,h)}const y=s(t,[["render",p]]);export{g as __pageData,y as default};
