import{_ as s,o as i,c as a,R as n}from"./chunks/framework.3LEfkZv-.js";const E=JSON.parse('{"title":"异常处理","description":"","frontmatter":{},"headers":[],"relativePath":"spring/advice/exception.md","filePath":"spring/advice/exception.md","lastUpdated":1701871954000}'),e={name:"spring/advice/exception.md"},l=n(`<h1 id="异常处理" tabindex="-1">异常处理 <a class="header-anchor" href="#异常处理" aria-label="Permalink to &quot;异常处理&quot;">​</a></h1><h2 id="lombok-sneakythrows" tabindex="-1">lombok @SneakyThrows <a class="header-anchor" href="#lombok-sneakythrows" aria-label="Permalink to &quot;lombok @SneakyThrows&quot;">​</a></h2><p>lombok 的 <code>@SneakyThrows</code> 可将异常传递给上层，可通过 <code>lombok.config</code> 文件配置异常抛出类型</p><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">lombok.nonNull.exceptionType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = NullPointerException</span></span></code></pre></div><ol><li><p>NullPointerException（默认）</p><p>抛出 NPE，异常信息为 <code>[fieldName] is marked non-null but is null</code></p></li><li><p>IllegalArgumentException</p><p>抛出 IllegalArgumentException，异常信息同 NPE</p></li><li><p>JDK</p><p>调用 <code>Objects.requireNonNull(fieldName, &quot;[fieldName] is marked non-null but is null&quot;)</code></p></li><li><p>Guava</p><p>调用 <code>com.google.common.base.Preconditions.checkNotNull(fieldName, [fieldName] is marked non-null but is null&quot;)</code></p></li><li><p>Assertion</p><p>调用 <code>Assert.notNull(fieldName, &quot;[fieldName] is marked non-null but is null&quot;)</code></p></li></ol><p>同样地，配置日志级别</p><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">lombok.nonNull.flagUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [warning | error] (默认: 未设置)</span></span></code></pre></div><h2 id="全局异常处理" tabindex="-1">全局异常处理 <a class="header-anchor" href="#全局异常处理" aria-label="Permalink to &quot;全局异常处理&quot;">​</a></h2><div class="language-kt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ml.sun.common.advice</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ml.sun.common.result.BaseResult</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ml.sun.common.result.ResultCode</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.springframework.web.bind.annotation.ExceptionHandler</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.springframework.web.bind.annotation.RestControllerAdvice</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@RestControllerAdvice</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExceptionAdvice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @ExceptionHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Exception::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BaseResult.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ResultCode.EXCEPTION, e.message)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @ExceptionHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(IllegalArgumentException::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> illegalArgsHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BaseResult.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ResultCode.ILLEGAL_ARGS, e.message)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,9),t=[l];function p(h,k,o,r,d,c){return i(),a("div",null,t)}const u=s(e,[["render",p]]);export{E as __pageData,u as default};
