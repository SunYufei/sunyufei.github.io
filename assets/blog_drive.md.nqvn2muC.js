import{_ as a,c as i,a2 as n,o as e}from"./chunks/framework.17zi-Nq4.js";const t="/drive/rclone.png",l="/drive/client01.png",p="/drive/client02.png",h="/drive/client03.png",o="/drive/client04.png",b=JSON.parse('{"title":"打造在线观看影音库","description":"","frontmatter":{"lastUpdated":"2020-03-07T00:00:00.000Z"},"headers":[],"relativePath":"blog/drive.md","filePath":"blog/drive.md","lastUpdated":1583539200000}'),r={name:"blog/drive.md"};function d(k,s,c,g,E,u){return e(),i("div",null,s[0]||(s[0]=[n('<h1 id="打造在线观看影音库" tabindex="-1">打造在线观看影音库 <a class="header-anchor" href="#打造在线观看影音库" aria-label="Permalink to &quot;打造在线观看影音库&quot;">​</a></h1><p>最近申请了一个无限容量的 Google Team Drive，里面存一些电影电视剧，配好了在线观看，同时解决了文件上传慢的问题</p><h1 id="最终效果" tabindex="-1">最终效果 <a class="header-anchor" href="#最终效果" aria-label="Permalink to &quot;最终效果&quot;">​</a></h1><ol><li>将视频存放到指定文件夹中</li><li>OneDrive 自动上传后释放本地空间</li><li>GitHub Actions 定时将 OneDrive 中的文件复制到 Google Drive 中</li><li>随时在线观看</li></ol><h1 id="配置过程记录" tabindex="-1">配置过程记录 <a class="header-anchor" href="#配置过程记录" aria-label="Permalink to &quot;配置过程记录&quot;">​</a></h1><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><p>开始之前，你需要准备：</p><ul><li>含有团队网盘的谷歌账号</li><li>Cloudflare 账号</li><li>微软账号</li><li>GitHub 账号</li><li>GoIndex</li><li>Rclone</li></ul><h2 id="_1-配置-google-drive" tabindex="-1">1 配置 Google Drive <a class="header-anchor" href="#_1-配置-google-drive" aria-label="Permalink to &quot;1 配置 Google Drive&quot;">​</a></h2><h3 id="_1-1-使用-rclone-设置-google-drive" tabindex="-1">1.1 使用 Rclone 设置 Google Drive <a class="header-anchor" href="#_1-1-使用-rclone-设置-google-drive" aria-label="Permalink to &quot;1.1 使用 Rclone 设置 Google Drive&quot;">​</a></h3><p>首先需要到 <a href="https://rclone.org/downloads/" target="_blank" rel="noreferrer">Rclone 官网</a> 下载合适版本的 Rclone</p><p><img src="'+t+`" alt=""></p><p>下载完成后解压，在 powershell 中运行 <code>rclone config</code> 设置 Google Drive</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>No remotes found - make a new one</span></span>
<span class="line"><span>n) New remote</span></span>
<span class="line"><span>s) Set configuration password</span></span>
<span class="line"><span>q) Quit config</span></span>
<span class="line"><span>n/s/q&gt; n</span></span>
<span class="line"><span>name&gt; GoogleDrive</span></span></code></pre></div><p>输入 <code>n</code> 新建一个配置，命名为 <code>GoogleDrive</code>，按下回车后选择远程存储类型</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Type of storage to configure.</span></span>
<span class="line"><span>Enter a string value. Press Enter for the default (&quot;&quot;).</span></span>
<span class="line"><span>Choose a number from below, or type in your own value</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>12 / Google Cloud Storage (this is not GoogleDrive)</span></span>
<span class="line"><span>   \\ &quot;google cloud storage&quot;</span></span>
<span class="line"><span>13 / GoogleDrive</span></span>
<span class="line"><span>   \\ &quot;drive&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>23 / Microsoft OneDrive</span></span>
<span class="line"><span>   \\ &quot;onedrive&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Storage&gt; 13</span></span></code></pre></div><p>输入 <code>13</code> 选择 <code>GoogleDrive</code>，接下来就要输入 Client ID 和 Client Secret</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Google Application Client Id</span></span>
<span class="line"><span>Setting your own is recommended.</span></span>
<span class="line"><span>See https://rclone.org/drive/#making-your-own-client-id for how to create your own.</span></span>
<span class="line"><span>If you leave this blank, it will use an internal key which is low performance.</span></span>
<span class="line"><span>Enter a string value. Press Enter for the default (&quot;&quot;).</span></span>
<span class="line"><span>client_id&gt;</span></span></code></pre></div><p>可以使用 rclone 自带的 Client ID 和 Client Secret，推荐自己去申请一个，避免官方的 Client ID 和 Client Secret 超出调用次数限制影响使用。</p><h3 id="_1-2-获取-google-client-id-和-client-secret" tabindex="-1">1.2 获取 Google Client ID 和 Client Secret <a class="header-anchor" href="#_1-2-获取-google-client-id-和-client-secret" aria-label="Permalink to &quot;1.2 获取 Google Client ID 和 Client Secret&quot;">​</a></h3><p>使用谷歌账户登录 <a href="https://console.developers.google.com/" target="_blank" rel="noreferrer">Google API Console</a>，选择或新建一个项目</p><p><img src="`+l+'" alt=""></p><p>在 <code>启用 API 和服务</code> 选项下搜索 <code>Drive</code>，找到 <code>Google Drive API</code></p><p><img src="'+p+'" alt=""></p><p>选择启用</p><p><img src="'+h+'" alt=""></p><p>点击左侧凭据，选择创建凭据。如果是第一次使用，会提示需要配置 OAuth 同意屏幕</p><p><img src="'+o+`" alt=""></p><p>此时需要跳转到 OAuth 同意屏幕中配置一个应用，只需填写应用名称</p><p>回到凭据，点击 <code>创建凭据</code>，选择 <code>OAuth 客户端 ID</code>，填写应用名称即可得到 Client ID 和 Client Secret</p><h3 id="_1-3-继续配置-google-drive" tabindex="-1">1.3 继续配置 Google Drive <a class="header-anchor" href="#_1-3-继续配置-google-drive" aria-label="Permalink to &quot;1.3 继续配置 Google Drive&quot;">​</a></h3><p>将刚才申请好的 Client ID 和 Client Secret 输入到 Rclone 的相应位置中</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Scope that rclone should use when requesting access from drive.</span></span>
<span class="line"><span>Enter a string value. Press Enter for the default (&quot;&quot;).</span></span>
<span class="line"><span>Choose a number from below, or type in your own value</span></span>
<span class="line"><span> 1 / Full access all files, excluding Application Data Folder.</span></span>
<span class="line"><span>   \\ &quot;drive&quot;</span></span>
<span class="line"><span> 2 / Read-only access to file metadata and file contents.</span></span>
<span class="line"><span>   \\ &quot;drive.readonly&quot;</span></span>
<span class="line"><span>   / Access to files created by rclone only.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>scope&gt; 1</span></span></code></pre></div><p>之后在 scope 中填写 <code>1</code>，给 Rclone 操作文件的权限</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Enter a string value. Press Enter for the default (&quot;&quot;).</span></span>
<span class="line"><span>root_folder_id&gt;</span></span></code></pre></div><p>此时需要填写根目录 ID，打开 <a href="https://drive.google.com/" target="_blank" rel="noreferrer">Google Drive</a>，选择 <code>共享云端硬盘</code>，打开自己的共享云端硬盘，将网址的最后一段复制下来，填到这里</p><p>接下来三个操作按回车使用默认配置即可</p><p>然后会弹出网页，需要登陆谷歌账号并授权 Rclone 访问你的网盘</p><p>得到特征码后会询问是否将其设置为团队网盘：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Configure this as a team drive?</span></span>
<span class="line"><span>y) Yes</span></span>
<span class="line"><span>n) No (default)</span></span>
<span class="line"><span>y/n&gt; y</span></span></code></pre></div><p>填写 <code>y</code> 然后在下面的列表中输入你的网盘序号（一般只有一个）</p><p>此时会提示配置好的信息。需要将 <code>client_id</code>、<code>client_secret</code>、<code>root_folder_id</code>、<code>refresh_token</code> 保存下来备用</p><p>若因网络问题配置失败，可以添加环境变量配置代理：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http_proxy=127.0.0.1:1080</span></span>
<span class="line"><span>https_proxy=127.0.0.1:1080</span></span></code></pre></div><h3 id="_1-4-配置部署-goindex" tabindex="-1">1.4 配置部署 GoIndex <a class="header-anchor" href="#_1-4-配置部署-goindex" aria-label="Permalink to &quot;1.4 配置部署 GoIndex&quot;">​</a></h3><p>Rclone 可以配合 WinFCP 将 Google Drive 挂载为本地硬盘。但由于某些都懂的原因，连接并不稳定</p><p>在 Cloudflare Workers 部署 GoIndex 可以直接访问 Google Drive 中的文件，速度与 Cloudflare 有关</p><p>GoIndex 可以实现在线播放网盘中的视频，这点非常重要，准备利用它把我的网盘打造成一个影音库</p><p>登录 Cloudflare，新建一个 Workers，填入 <a href="https://github.com/donwa/goindex" target="_blank" rel="noreferrer">GoIndex</a> 项目中 index.js 文件的内容。index.js 文件的一开始是如下内容：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   siteName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;GoIndex&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 网站名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   root_pass: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根目录密码，优先于.password</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   version: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.0.7&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 程序版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   theme: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;material&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// material  classic</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   client_id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   client_secret: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   refresh_token: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 授权 token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   root: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根目录ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>需要将刚才使用 Rclone 时得到的 <code>client_id</code>、<code>client_secret</code>、<code>refresh_token</code> 和 <code>root_folder_id</code> 填到这里</p><p>点击 <code>Save and Deploy</code> 按钮即可完成部署</p><h2 id="_2-配置-onedrive" tabindex="-1">2 配置 OneDrive <a class="header-anchor" href="#_2-配置-onedrive" aria-label="Permalink to &quot;2 配置 OneDrive&quot;">​</a></h2><p>平时使用教育邮箱注册的 1TB 容量的 OneDrive 同步文件。Win10 下的 OneDrive 客户端上传能够跑满带宽，但下载很慢</p><p>OneDrive 客户端只会同步特定的文件夹，如 <code>C:\\Users\\&lt;user&gt;\\OneDrive</code>。如果文件分布在多个文件夹或多个磁盘中，可以使用 <code>mklink</code> 创建软链接来实现不同文件夹的同步</p><h3 id="_2-1-创建软链接实现跨磁盘同步" tabindex="-1">2.1 创建软链接实现跨磁盘同步 <a class="header-anchor" href="#_2-1-创建软链接实现跨磁盘同步" aria-label="Permalink to &quot;2.1 创建软链接实现跨磁盘同步&quot;">​</a></h3><p>使用 <code>mklink</code> 命令建立软链接，mklink 的基础语法如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>MKLINK [[/D] | [/H] | [/J]] Link Target</span></span></code></pre></div><p><code>/d</code> 给目录创建符号链接，<code>/h</code> 创建硬链接，<code>/j</code> 创建连接点。其中 <code>/h</code> 创建的硬链接占用空间与源文件相同；<code>/d</code> 与 <code>/j</code> 命令基本相同，唯一的不同点是 <code>/d</code> 可以跨网络磁盘，<code>/j</code> 不可以</p><p><code>Link</code> 和 <code>Target</code> 为路径，建议使用绝对路径</p><p>例如，对 <code>D:\\Videos</code> 文件夹建立软链接，让 OneDrive 对其同步：</p><div class="language-bat vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">mklink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /j </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:\\Users\\USER\\OneDrive\\Videos&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;D:\\Videos&quot;</span></span></code></pre></div><h3 id="_2-2-cloudflare-oneindex" tabindex="-1">2.2 Cloudflare + OneIndex <a class="header-anchor" href="#_2-2-cloudflare-oneindex" aria-label="Permalink to &quot;2.2 Cloudflare + OneIndex&quot;">​</a></h3><p>OneDrive 这里也有一个与 GoIndex 相同的工具 <a href="https://github.com/vcheckzen/FODI" target="_blank" rel="noreferrer">FODI</a>，可以部署在 Cloudflare Workers 中。但由于 OneDrive 的限制，在线观看视频非常慢，码率低的视频还好，码率高的视频无法流畅观看</p><p>配置 FODI 与配置 GoIndex 相同，首先需要用 rclone 配置好 OneDrive，步骤参考前面的 rclone 配置 GoogleDrive，然后将 FODI 部署到 Cloudflare 中</p><p>同样的，可以申请自己的 OneDrive Azure API 用于 Rclone，具体操作参考 <a href="https://www.jianshu.com/p/072ff75d35ca" target="_blank" rel="noreferrer">简书：创建适用于 Rclone 的 OneDrive Azure API</a></p><h2 id="_3-使用-github-actions-进行网盘同步" tabindex="-1">3 使用 GitHub Actions 进行网盘同步 <a class="header-anchor" href="#_3-使用-github-actions-进行网盘同步" aria-label="Permalink to &quot;3 使用 GitHub Actions 进行网盘同步&quot;">​</a></h2><p>上面提到的两种方案各有优劣：</p><table tabindex="0"><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">GoogleDrive + GoIndex</th><th style="text-align:center;">OneDrive + FODI</th></tr></thead><tbody><tr><td style="text-align:center;">上传</td><td style="text-align:center;">慢，经常掉线</td><td style="text-align:center;">很快，可跑满带宽</td></tr><tr><td style="text-align:center;">在线体验</td><td style="text-align:center;">快</td><td style="text-align:center;">卡顿，不能流畅观看</td></tr></tbody></table><p>在逛 GitHub 的时候看到了 <a href="https://github.com/marketplace/actions/github-action-for-rclone" target="_blank" rel="noreferrer">GitHub Actions for rclone</a>，可以使用 GitHub Actions 在不同的网盘之间同步文件，没有访问限制。</p><h3 id="_3-1-goindex-项目改造" tabindex="-1">3.1 GoIndex 项目改造 <a class="header-anchor" href="#_3-1-goindex-项目改造" aria-label="Permalink to &quot;3.1 GoIndex 项目改造&quot;">​</a></h3><p>Fork 了一下 GoIndex 项目（<a href="https://github.com/SunYufei/goindex" target="_blank" rel="noreferrer">SunYufei/goindex</a>），对其进行稍加改造：</p><h4 id="_3-1-1-删除其他分支" tabindex="-1">3.1.1 删除其他分支 <a class="header-anchor" href="#_3-1-1-删除其他分支" aria-label="Permalink to &quot;3.1.1 删除其他分支&quot;">​</a></h4><p>只保留了 master 分支，去掉了其他的分支</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看所有分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除远程分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --delete</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">branch_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h4 id="_3-1-2-去掉不用的文件" tabindex="-1">3.1.2 去掉不用的文件 <a class="header-anchor" href="#_3-1-2-去掉不用的文件" aria-label="Permalink to &quot;3.1.2 去掉不用的文件&quot;">​</a></h4><p>移除了 classic 主题，只保留 <code>index.js</code> 和 material 主题下的 <code>app.js</code>，并将 <code>app.js</code> 移到根目录，重命名为 <code>material.js</code>。</p><p>此时需要修改 <code>index.js</code> 中对主题文件的引用。修改第 20 行 src 中逗号后面的那个 js 文件引用路径。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;//cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;//cdn.jsdelivr.net/gh/SunYufei/GoIndex@master/material.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="_3-1-3-material-主题微调" tabindex="-1">3.1.3 Material 主题微调 <a class="header-anchor" href="#_3-1-3-material-主题微调" aria-label="Permalink to &quot;3.1.3 Material 主题微调&quot;">​</a></h4><p>GoIndex 默认的 material 主题在视频播放页面会有文件链接等内容，这是我不需要的。所以我微调了主题文件，去掉这些内容</p><p>删除 <code>material.js</code> 文件第 274-282 行：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 固定标签 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mdui-textfield&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mdui-textfield-label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;下载地址&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mdui-textfield-input&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${url}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mdui-textfield&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mdui-textfield-label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;HTML 引用地址&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">textarea</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mdui-textfield-input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">source</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${url}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">textarea</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="_3-1-4-将改动同步到-cloudflare-workers-中" tabindex="-1">3.1.4 将改动同步到 Cloudflare Workers 中 <a class="header-anchor" href="#_3-1-4-将改动同步到-cloudflare-workers-中" aria-label="Permalink to &quot;3.1.4 将改动同步到 Cloudflare Workers 中&quot;">​</a></h4><p>将修改后的 <code>index.js</code> 文件内容更新到 Cloudflare Workers 中，否则不会看到主题的改动</p><h3 id="_3-2-使用-github-actions-实现网盘" tabindex="-1">3.2 使用 GitHub Actions 实现网盘 <a class="header-anchor" href="#_3-2-使用-github-actions-实现网盘" aria-label="Permalink to &quot;3.2 使用 GitHub Actions 实现网盘&quot;">​</a></h3><p>想要进行这一步，需要使用 rclone 配置好 OneDrive 和 Google Drive，然后提取 <code>C:\\Users\\&lt;user&gt;\\.config\\rclone\\rclone.conf</code> 文件内容：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[GoogleDrive]</span></span>
<span class="line"><span>type = drive</span></span>
<span class="line"><span>client_id = xxx</span></span>
<span class="line"><span>client_secret = xxx</span></span>
<span class="line"><span>scope = drive</span></span>
<span class="line"><span>root_folder_id = xxx</span></span>
<span class="line"><span>token = {&quot;access_token&quot;:&quot;xxx&quot;,&quot;token_type&quot;:&quot;xxx&quot;,&quot;refresh_token&quot;:&quot;xxx&quot;,&quot;expiry&quot;:&quot;xxx&quot;}</span></span>
<span class="line"><span>team_drive = xxx</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[OneDrive]</span></span>
<span class="line"><span>type = onedrive</span></span>
<span class="line"><span>token = {&quot;access_token&quot;:&quot;xxx&quot;,&quot;token_type&quot;:&quot;xxx&quot;,&quot;refresh_token&quot;:&quot;xxx&quot;,&quot;expiry&quot;:&quot;xxx&quot;}</span></span>
<span class="line"><span>drive_id = xxx</span></span>
<span class="line"><span>drive_type = business</span></span></code></pre></div><p>到 GitHub 项目中添加一个 Secrets，命名为 <code>RCLONE_CONF</code>，值为文件的所有内容</p><p>在 GoIndex 项目根目录新建 <code>.github/workflows/copy.yml</code> 文件，填入如下内容：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rclone</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  schedule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# GMT 16:30 / BJT 00:30 进行同步</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cron</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;30 16 * * *&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># job name</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 在 Ubuntu 中运行</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">wei/rclone@v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          RCLONE_CONF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.RCLONE_CONF }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">copy --update --verbose OneDrive:/ GoogleDrive:/</span></span></code></pre></div><p>将修改好的项目 push 到 GitHub 中，GitHub 会在<s>每 6 小时</s>每天凌晨 00:30（GMT 16:30）会自动将 OneDrive 文件的内容复制到 Google Drive 中。实测同步速度在 <s>1.5MB/s 左右，虽然不快，但稳定不掉线</s> 30MB/s 左右，非常快，还没有连接问题</p><h2 id="参考内容" tabindex="-1">参考内容 <a class="header-anchor" href="#参考内容" aria-label="Permalink to &quot;参考内容&quot;">​</a></h2><ol><li><a href="https://www.iyyxz.com/how-to-use-Cloudflare-and-google-to-build-a-unlimited-storage-drive-index-for-free/" target="_blank" rel="noreferrer">利用 Cloudflare 和 Google 免费搭建无限空间网盘</a></li><li>简书：<a href="https://www.jianshu.com/p/b1614a073087" target="_blank" rel="noreferrer">Windows mklink /d /h /j 精讲</a></li><li><a href="https://github.com/donwa/goindex" target="_blank" rel="noreferrer">GoIndex</a></li><li><a href="https://github.com/vcheckzen/FODI" target="_blank" rel="noreferrer">FODI</a></li><li><a href="https://rclone.org/docs/" target="_blank" rel="noreferrer">Rclone Docs</a></li><li><a href="https://github.com/marketplace/actions/github-action-for-rclone" target="_blank" rel="noreferrer">GitHub Actions for rclone</a></li></ol>`,94)]))}const v=a(r,[["render",d]]);export{b as __pageData,v as default};
